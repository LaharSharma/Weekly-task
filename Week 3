1. Consider an array MARKS[20][5] which sotes the makrs obbtained by 20 students in 5 subjects . Now write a program to"
 a) find the average marks obtained in each subject
 b) find the average marks obtained by every student
 c)findt eht number of students who have scored below 50 in their average
 d) display the scores obtaind by every student

#include <stdio.h>

int main() {
    int MARKS[20][5];
    int i, j;
    float subAvg[5] = {0};    // average of each subject
    float stuAvg[20] = {0};   // average of each student
    int below50 = 0;          // counter for students < 50

    // Input marks
    printf("Enter marks of 20 students in 5 subjects:\n");
    for (i = 0; i < 20; i++) {
        printf("Enter marks for student %d:\n", i + 1);
        for (j = 0; j < 5; j++) {
            scanf("%d", &MARKS[i][j]);
        }
    }

    // (a) Subject-wise average
    for (j = 0; j < 5; j++) {
        int sum = 0;
        for (i = 0; i < 20; i++) {
            sum += MARKS[i][j];
        }
        subAvg[j] = sum / 20.0;
    }

    // (b) Student-wise average + (c) check below 50
    for (i = 0; i < 20; i++) {
        int sum = 0;
        for (j = 0; j < 5; j++) {
            sum += MARKS[i][j];
        }
        stuAvg[i] = sum / 5.0;
        if (stuAvg[i] < 50)
            below50++;
    }

    // Display results
    printf("\nAverage marks in each subject:\n");
    for (j = 0; j < 5; j++) {
        printf("Subject %d: %.2f\n", j + 1, subAvg[j]);
    }

    printf("\nAverage marks of each student:\n");
    for (i = 0; i < 20; i++) {
        printf("Student %d: %.2f\n", i + 1, stuAvg[i]);
    }

    printf("\nNumber of students with average < 50 = %d\n", below50);

    // (d) Display scores of every student
    printf("\nScores obtained by every student:\n");
    for (i = 0; i < 20; i++) {
        printf("Student %d: ", i + 1);
        for (j = 0; j < 5; j++) {
            printf("%d ", MARKS[i][j]);
        }
        printf("\n");
    }

    return 0;
}


2. write a program that reads an array of 100 integersa display all the paris of elemts where sum is 50 in c


#include <stdio.h>

int main() {
    int arr[100];
    int i, j;

    // Step 1: Input 100 integers
    printf("Enter 100 integers:\n");
    for (i = 0; i < 100; i++) {
        scanf("%d", &arr[i]);
    }

    // Step 2: Find and display pairs with sum = 50
    printf("\nPairs of elements with sum = 50:\n");
    for (i = 0; i < 100; i++) {
        for (j = i + 1; j < 100; j++) {
            if (arr[i] + arr[j] == 50) {
                printf("(%d, %d)\n", arr[i], arr[j]);
            }
        }
    }

    return 0;
}


3. Interchanging the second and the second last element in an array


#include <stdio.h>

int main() {
    int n, i;

    // Step 1: Input size
    printf("Enter size of array: ");
    scanf("%d", &n);

    int arr[n];

    // Step 2: Input array
    printf("Enter %d elements:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    // Step 3: Display original array
    printf("\nOriginal array:\n");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }

    // Step 4: Swap 2nd element with 2nd last element
    if (n >= 2) {
        int temp = arr[1];             // second element (index 1)
        arr[1] = arr[n - 2];           // second last element (index n-2)
        arr[n - 2] = temp;
    }

    // Step 5: Display updated array
    printf("\n\nArray after swapping second and second last elements:\n");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }

    return 0;
}


4. A program that calculate the sum of squares of the elements


#include <stdio.h>

int main() {
    int n, i;
    int sum = 0;

    // Step 1: Input size
    printf("Enter size of array: ");
    scanf("%d", &n);

    int arr[n];

    // Step 2: Input array
    printf("Enter %d elements:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    // Step 3: Calculate sum of squares
    for (i = 0; i < n; i++) {
        sum += arr[i] * arr[i];
    }

    // Step 4: Display result
    printf("\nSum of squares of elements = %d\n", sum);

    return 0;
}


5. A program to compute the sum and mean of the elements of a two-dimensional array
#include <stdio.h>

int main() {
    int rows, cols, i, j;
    int sum = 0;
    float mean;

    // Step 1: Input size
    printf("Enter number of rows: ");
    scanf("%d", &rows);
    printf("Enter number of columns: ");
    scanf("%d", &cols);

    int arr[rows][cols];

    // Step 2: Input array elements
    printf("Enter elements of the %dx%d array:\n", rows, cols);
    for (i = 0; i < rows; i++) {
        for (j = 0; j < cols; j++) {
            scanf("%d", &arr[i][j]);
        }
    }

    // Step 3: Calculate sum
    for (i = 0; i < rows; i++) {
        for (j = 0; j < cols; j++) {
            sum += arr[i][j];
        }
    }

    // Step 4: Calculate mean
    mean = (float)sum / (rows * cols);

    // Step 5: Display results
    printf("\nSum of all elements = %d\n", sum);
    printf("Mean of all elements = %.2f\n", mean);

    return 0;
}

6. A program to read and display a square(using function)
#include <stdio.h>

// Function to read a square matrix
void readMatrix(int arr[10][10], int n) {
    int i, j;
    printf("Enter elements of %dx%d matrix:\n", n, n);
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &arr[i][j]);
        }
    }
}

// Function to display a square matrix
void displayMatrix(int arr[10][10], int n) {
    int i, j;
    printf("\nThe %dx%d matrix is:\n", n, n);
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            printf("%d ", arr[i][j]);
        }
        printf("\n");  // new line after each row
    }
}

int main() {
    int n;
    int arr[10][10];

    printf("Enter size of square matrix (max 10): ");
    scanf("%d", &n);

    // Call functions
    readMatrix(arr, n);
    displayMatrix(arr, n);

    return 0;
}



7. A program that computes the sum of the elements that are stored on the main diagonal of a matrix using pointers.
#include <stdio.h>

int main() {
    int n, i;
    int arr[10][10];
    int sum = 0;

    printf("Enter size of square matrix (max 10): ");
    scanf("%d", &n);

    printf("Enter elements of %dx%d matrix:\n", n, n);
    for (i = 0; i < n * n; i++) {
        scanf("%d", (*(arr) + i));  // using pointer to read elements
    }

    // Compute sum of diagonal using pointers
    for (i = 0; i < n; i++) {
        sum += *(*(arr + i) + i);  // element at [i][i]
    }

    printf("\nSum of main diagonal elements = %d\n", sum);

    return 0;
}



8. A program to add two 3*3 matrix using pointers
#include <stdio.h>

int main() {
    int a[3][3], b[3][3], sum[3][3];
    int *p, *q, *r;
    int i, j;

    // Input first matrix
    printf("Enter elements of first 3x3 matrix:\n");
    for (i = 0; i < 3; i++) {
        for (j = 0; j < 3; j++) {
            scanf("%d", &a[i][j]);
        }
    }

    // Input second matrix
    printf("Enter elements of second 3x3 matrix:\n");
    for (i = 0; i < 3; i++) {
        for (j = 0; j < 3; j++) {
            scanf("%d", &b[i][j]);
        }
    }

    // Assign base addresses to pointers
    p = &a[0][0];
    q = &b[0][0];
    r = &sum[0][0];

    // Add matrices using pointers
    for (i = 0; i < 9; i++) {
        *(r + i) = *(p + i) + *(q + i);
    }

    // Display the result
    printf("Sum of two matrices:\n");
    for (i = 0; i < 3; i++) {
        for (j = 0; j < 3; j++) {
            printf("%d\t", sum[i][j]);
        }
        printf("\n");
    }

    return 0;
}




9. A program that computes the producct of the elements tha are stored on the main diagonal above the main diagonal
#include <stdio.h>

int main() {
    int n, i, j;
    long long product = 1; // use long long to avoid overflow

    printf("Enter the size of square matrix: ");
    scanf("%d", &n);

    int a[n][n];

    // Input matrix
    printf("Enter elements of %dx%d matrix:\n", n, n);
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &a[i][j]);
        }
    }

    // Compute product of elements on and above main diagonal
    for (i = 0; i < n; i++) {
        for (j = i; j < n; j++) {   // start from column = row (main diagonal)
            product *= a[i][j];
        }
    }

    // Display result
    printf("Product of elements on and above main diagonal = %lld\n", product);

    return 0;
}




10. Write a program to count the total number of non-zro elements in a two-dimensional array
#include <stdio.h>

int main() {
    int rows, cols, i, j, count = 0;

    // Input rows and columns
    printf("Enter number of rows: ");
    scanf("%d", &rows);
    printf("Enter number of columns: ");
    scanf("%d", &cols);

    int arr[rows][cols];

    // Input elements
    printf("Enter elements of the %dx%d array:\n", rows, cols);
    for (i = 0; i < rows; i++) {
        for (j = 0; j < cols; j++) {
            scanf("%d", &arr[i][j]);
        }
    }

    // Count non-zero elements
    for (i = 0; i < rows; i++) {
        for (j = 0; j < cols; j++) {
            if (arr[i][j] != 0) {
                count++;
            }
        }
    }

    // Display result
    printf("Total number of non-zero elements = %d\n", count);

    return 0;
}
